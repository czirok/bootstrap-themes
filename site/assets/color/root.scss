@import "bootstrap-import";

@each $palette, $palette-map in $palette-colors {

  [data-bs-theme="#{$palette}"] {
    $bg-body: map-get($palette-map, "body_bg");
    $fg-body: map-get($palette-map, "body_color");
    $is-dark: color-contrast($bg-body) == $color-contrast-light;

    color-scheme: if($is-dark, dark, light);

    --#{$prefix}white-rgb: #{to-rgb($white)};
    --#{$prefix}black-rgb: #{to-rgb($black)};

    --#{$prefix}body-color: #{$fg-body};
    --#{$prefix}body-color-rgb: #{to-rgb($fg-body)};
    --#{$prefix}body-bg: #{$bg-body};
    --#{$prefix}body-bg-rgb: #{to-rgb($bg-body)};

    @each $name, $hex in $theme-colors {
      --#{$prefix}#{$name}: #{$hex};
    }

    @each $name, $hex in $theme-colors {
      --#{$prefix}grays-#{$name}: #{$hex};
    }

    $emphasis-color: if($is-dark, $gray-100, $black);
    $secondary-color: if($is-dark, rgba($fg-body, .75), rgba($fg-body, .75));
    $secondary-bg: if($is-dark, tint-color($bg-body, 10%), shade-color($bg-body, 10%));
    $tertiary-color: if($is-dark, rgba($fg-body, .5), rgba($fg-body, .5));
    $tertiary-bg: if($is-dark, tint-color($bg-body, 5%), shade-color($bg-body, 5%));
    $headings-color: if($is-dark, $white, $black);
    $border-color: if($is-dark, tint-color($bg-body, 20%), shade-color($bg-body, 20%));
    $border-color-translucent: if($is-dark, rgba($fg-body, .15), rgba($fg-body, .175));
    $link-color: if($is-dark, $blue-300, $blue-700);
    $link-hover-color: if($is-dark, $blue-200, $blue-800);
    $code-color: if($is-dark, $pink-300, $pink-700);

    --#{$prefix}emphasis-color: #{$emphasis-color};
    --#{$prefix}emphasis-color-rgb: #{to-rgb($emphasis-color)};
    --#{$prefix}secondary-color: #{$secondary-color};
    --#{$prefix}secondary-color-rgb: #{to-rgb($secondary-color)};
    --#{$prefix}secondary-bg: #{$secondary-bg};
    --#{$prefix}secondary-bg-rgb: #{to-rgb($secondary-bg)};
    --#{$prefix}tertiary-color: #{$tertiary-color};
    --#{$prefix}tertiary-color-rgb: #{to-rgb($tertiary-color)};
    --#{$prefix}tertiary-bg: #{$tertiary-bg};
    --#{$prefix}tertiary-bg-rgb: #{to-rgb($tertiary-bg)};
    --#{$prefix}heading-color: #{$headings-color};
    --#{$prefix}border-color: #{$border-color};
    --#{$prefix}border-color-translucent: #{$border-color-translucent};
    --#{$prefix}link-color: #{$link-color};
    --#{$prefix}link-hover-color: #{$link-hover-color};
    --#{$prefix}code-color: #{$code-color};

    $b-primary:  if($is-dark, shade-color($primary, 20%), tint-color($primary, 10%));
    $bg-primary: if($is-dark, shade-color($primary, 50%), tint-color($primary, 40%));
    $fg-primary: if($is-dark, tint-color($primary, 65%), shade-color($primary, 65%));

    // .accordion-button-*
    // http://localhost:9001/docs/5.2/components/accordion/
    .accordion-button {
      --#{$prefix}accordion-active-color: #{$fg-primary};
      --#{$prefix}accordion-active-bg: #{$bg-primary};

      &:not(.collapsed) {
        &::after {
          --#{$prefix}accordion-btn-active-icon: #{escape-svg(url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='#{$fg-primary}'><path fill-rule='evenodd' d='M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z'/></svg>"))};
        }
      }
      &::after {
        --#{$prefix}accordion-btn-icon: #{escape-svg(url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='#{$fg-body}'><path fill-rule='evenodd' d='M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z'/></svg>"))};
      }
    }

    // .list-group-item-*
    // http://localhost:9001/docs/5.2/components/list-group/
    .list-group-item {
      --#{$prefix}list-group-active-color: #{$fg-primary};
      --#{$prefix}list-group-active-bg: #{$bg-primary};
      --#{$prefix}list-group-active-border-color: #{$bg-primary};
    }

    // .button-close*
    // http://localhost:9001/docs/5.2/components/close-button/
    $icon-btn-close:    url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='#{$fg-body}'><path d='M.293.293a1 1 0 0 1 1.414 0L8 6.586 14.293.293a1 1 0 1 1 1.414 1.414L9.414 8l6.293 6.293a1 1 0 0 1-1.414 1.414L8 9.414l-6.293 6.293a1 1 0 0 1-1.414-1.414L6.586 8 .293 1.707a1 1 0 0 1 0-1.414z'/></svg>") !default;

    .btn-close {
      background: transparent escape-svg($icon-btn-close) center / $btn-close-width auto no-repeat; // include transparent for button elements
    }

    // .form*
    //
    // http://localhost:9001/docs/5.2/forms/select/
    $icon-form-select:    url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'><path fill='none' stroke='#{$fg-body}' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m2 5 6 6 6-6'/></svg>") !default;

    .form-select {
      --#{$prefix}form-select-bg: #{escape-svg($icon-form-select)};
    }

    // http://localhost:9001/docs/5.2/forms/checks-radios/
    $icon-form-switch-bg:    url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'><circle r='3' fill='#{$fg-body}'/></svg>") !default;

    // http://localhost:9001/docs/5.2/forms/checks-radios/#switches
    .form-switch {
      // Use `:not()` to keep from having to override subsequent embedded SVGs
      .form-check-input:not(:checked):not(:focus) {
        background-image: escape-svg($icon-form-switch-bg);
      }
    }

    // http://localhost:9001/docs/5.2/forms/checks-radios/#switches
    .form-check-input {
      &:checked {
        background-color: #{$bg-primary};
        border-color: #{$b-primary};
      }

      &[type="checkbox"]:indeterminate {
        background-color: #{$bg-primary};
        border-color: #{$b-primary};
      }
    }
  }
}
